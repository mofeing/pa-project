Este es el codigo para mem_copy en ensamblador.
El codigo empieza en la dirección 0x1000
Los datos se encuentran a partir de la dirección 0x4000


La memoria con los datos quedaria entonces de la siguiente manera
0x4000 a[0]
0x4004 a[1]
0x4008 a[2]
.
.
.
0x41FC a[127]
0x4200 b[0]
0x4204 b[1]
.
.
.
0x43FC b[127]

*****************************************************************************************
La memoria con el código sería la siguiente

//r7 guarda direccion de a[i]
//r8 guarda VALOR DE a[i]
//r9 guarda la direccion de b[i]
//r10 guarda i
//r11 guarda "128"
//r12 registro que vale 0

0x1000 ADD.I 16384(r7)->r7
0x1004 ADD.I 16896(r9)->r9
0x1008 ADD.I 5(r8)->r8
0x100C ADD.I 128(r11)->r11
0x1010 BEQ r10,r11,20
0x1014 STW r8->0(r7)
0x1018 ADD.I 1(r10)->r10
0x101C ADD.I 4(r7)->r7
0x1020 JUMP r12,4112
0x1024 SUB r10,r10->r10
0x1028 ADD.I 16384(r12)->r7
0x102C BEQ r10,r11,28
0x1030 LDW 0(r7)->r8
0x1034 STW r8->0(r9)
0x1038 ADD.I 1(r10)->r10
0x103C ADD.I 4(r7)->r7
0x1040 ADD.I 4(r9)->r9
0x1044 JUMP r12,4140
0x1048 JUMP r12,4168


//Sin comentarios
ADD.I 16384(r7)->r7
ADD.I 16896(r9)->r9
ADD.I 5(r8)->r8
ADD.I 128(r11)->r11
BEQ r10,r11,20
STW r8->0(r7)
ADD.I 1(r10)->r10
ADD.I 4(r7)->r7
JUMP r12,4112
SUB r10,r10->r10
ADD.I 16384(r12)->r7
BEQ r10,r11,28
LDW 0(r7)->r8
STW r8->0(r9)
ADD.I 1(r10)->r10
ADD.I 4(r7)->r7
ADD.I 4(r9)->r9
JUMP r12,4140
JUMP r12,4168


//Binario
01101000011100111100000000000000
01101000100101001100001000000000
01101000100001000000000000000101
01101000101101011000000010000000
01100000000001010010110000010100
00100110100000111000000000000000
01101000101001010000000000000001
01101000011100111000000000000100
01100010000001100001000000010000
00000010101001010010100000000000
01101000011101100100000000000000
01100000000001010010110000011100
00100010100000111000000000000000
00100110100001001000000000000000
01101000101001010000000000000001
01101000011100111000000000000100
01101000100101001000000000000100
01100010000001100001000000101100
01100010000001100001000001001000


//HEXA



********************************************************************************************************




